#include <string>
#include <iostream>
#include <cmath>
#include <queue>
#include <vector>
#include <algorithm>
using namespace std;
#define MAX 2001
#define MOD 1000000007
#define endl "\n"
typedef long long ll;
int i, j, x, y, z, k, N, M, T, K, W, V;
int op, temp, tmp;
int isPal[MAX][MAX];
int dp[MAX];
int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    string s;
    cin >> s;
    for(int i = 0; i < s.size(); i++) {
        isPal[i + 1][i + 1] = 1;
        if(i != s.size() - 1 && s[i] == s[i + 1])
            isPal[i + 1][i + 2] = 1;
    }
    for(int size = 2; size < s.size(); size++){
        for(int i = 0; i <= s.size() - size; i++){
            if(s[i] == s[i + size] && isPal[i + 2][i + size])
                isPal[i + 1][i + size + 1] = 1;
        }
    }
    for(int i = 1; i <= s.size(); i++){
        int xmin = MAX;
        for(int j = 1; j <= i; j++){
            if(isPal[j][i])
                xmin = min(xmin, dp[j - 1] + isPal[j][i]);
        }
        dp[i] = xmin;
    }
    cout << dp[s.size()];
}
