#include <cstdio>
#include <iostream>
#include <queue>
#include <stack>
#include <string>
#include <algorithm>
#include <cmath>
#include <stdlib.h>

using namespace std;

int hashf[400001] = {0, };

int main(){
    int n;
    cin >> n;
    vector<int> v;
    for(int i = 0; i < n; i++){
        string command;
        cin >> command;
        if(command == "push_front"){
            int tmp;
            cin >> tmp;
            v.push_back(0);
            for(int i = v.size() - 2;i >= 0; i--)
                v[i + 1] = v[i];
            v[0] = tmp;
        }
        else if(command == "push_back"){
            int tmp;
            cin >> tmp;
            v.push_back(tmp);
        }
        else if(command == "pop_front"){
            if(v.empty()){
                cout << -1 << endl;
                continue;
            }
            cout << v[0] << endl;
            v.erase(v.begin());
        }
        else if(command == "pop_back"){
            if(v.empty()){
                cout << -1 << endl;
                continue;
            }
            cout << v[v.size() - 1] << endl;
            v.pop_back();
        }
        else if(command == "size"){
            if(v.empty()){
                cout << 0 << endl;
                continue;
            }
            cout << v.size() << endl;
        }
        else if(command == "empty"){
            if(v.empty()) {
                cout << 1 << endl;
            }
            else{
                cout << 0 << endl;
            }
        }
        else if(command == "front"){
            if(v.empty()){
                cout << -1 << endl;
                continue;
            }
            cout << v[0] << endl;
        }
        else if(command == "back"){
            if(v.empty()){
                cout << -1 << endl;
                continue;
            }
            cout << v[v.size() - 1] << endl;
        }
    }
}
