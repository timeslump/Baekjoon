#include<iostream>
#include<algorithm>
#include<queue>
#include<map>
#define endl "\n"

using namespace std;

typedef unsigned long long ll;


int N, M;
int cnt = 0;
bool V[300010];
void bfs(int x){
    queue<int> q;
    q.push(x);
    V[x] = true;
    while(!q.empty()){
        int qs = q.size();
        cnt++;
        while(qs--){
            int d = q.front();
            q.pop();
            if(d == M)
                return;
            if(d - 1 >= 0 && !V[d-1]) {
                V[d-1] = true;
                q.push(d - 1);
            }
            if(d + 1 <= 100000 && !V[d +1 ]) {
                V[d + 1] = true;
                q.push(d + 1);
            }
            if(d * 2 <= 100000 && !V[d * 2]) {
                V[d * 2] = true;
                q.push(d * 2);
            }
        }
    }
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> N >> M;
    bfs(N);
    cout << cnt - 1;
}
