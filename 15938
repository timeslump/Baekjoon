#include<iostream>
#include<vector>
#include<queue>
using namespace std;
typedef long long ll;
#define MOD 1000000007
ll Arr[402][402][202] = {0, };
int Map[401][401] = {0, };
int i, j;
int Xs, Ys;
int Xh, Yh;
int revisex;
int revisey;
int T;
int dx[4] = {1, 0, -1, 0};
int dy[4] = {0, 1, 0, -1};
void bfs() {
    Arr[Xs][Ys][T] = 1;
    for(int k = T; k >= 1; k--) {
        for (int i = 0; i <= 401; i++) {
            for (int j = 0; j <= 401; j++) {
                if(i == Xh && j == Yh)
                    continue;
                if(Map[i][j] == 1 || Arr[i][j][k] == 0)
                    continue;
                for (int h = 0; h < 4; h++) {
                    int nx = i + dx[h];
                    int ny = j + dy[h];
                    if (0 > nx || nx > 400 || 0 > ny || ny > 400 || Map[nx][ny] == 1)
                        continue;
                    Arr[nx][ny][k - 1] = (Arr[nx][ny][k - 1] + Arr[i][j][k]) % 1000000007;
                }
            }
        }
    }
}
int main(){
    cin >> Xs >> Ys;
    revisex = 200 - Xs;
    revisey = 200 - Ys;
    Xs = 200;
    Ys = 200;
    cin >> T;
    cin >> Xh >> Yh;
    Xh += revisex;
    Yh += revisey;
    if(0 > Xh || Xh > 400 || 0 > Yh || Yh > 400){
        cout << 0 << endl;
        return 0;
    }
    int X;
    cin >> X;
    while(X--){
        cin >> i >> j;
        i += revisex;
        j += revisey;
        if(0 > i || i > 400 || 0 > j || j > 400)
            continue;
        Map[i][j] = 1;
    }

    bfs();
    ll cnt = 0;
    for(int i = 0; i <= T; i++)
        cnt = (cnt + Arr[Xh][Yh][i]) % MOD;
    cout << cnt << endl;
}
