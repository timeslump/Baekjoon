#include<iostream>
#include<string>
#include<cmath>

using namespace std;
int size;


bool check(unsigned long long partin, unsigned long long x, int i){
    unsigned long long mod = pow(10, i + 1);
    unsigned long long dx;
    if(i == 9){
        unsigned long long xfirst = x % 10;
        unsigned long long left = x % (mod / 10);
        dx = ((left * x) + (x - left) * xfirst) % mod;
    }
    else
        dx = (x * x) % mod;

    if(i == 9){
        unsigned long long xfirst = dx % 10;
        unsigned long long left = x % (mod / 10);
        dx = ((left * dx) + (x - left) * xfirst) % mod;
    }
    else
        dx = (dx * x) % mod;

    if(partin == dx)
        return true;
    else
        return false;
}
unsigned long long solve(unsigned long long input){
    unsigned long long x = 0;
    for(int i = 0; i < size; i++){
        unsigned long long partin = input % (unsigned long long) pow(10, i + 1);
        for(int j = 0; j <= 9; j++){
            x = x + j * pow(10, i);
            if(check(partin, x, i)) {
                break;
            }
            x = x - j * pow(10, i);
        }
    }
    return x;
}
int main() {
    int N;
    cin >> N;
    while(N--){
        unsigned long long input;
        unsigned long long ans;
        cin >> input;
        string tmp;
        tmp = to_string(input);
        size = tmp.size();
        ans = solve(input);
        cout << ans << "\n";
    }
}
