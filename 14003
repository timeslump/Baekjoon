#include<iostream>
#include <vector>
using namespace std;

typedef long long ll;
vector<ll> dp;
int track[1000001];
int arr[1000001];
vector<int> ans;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int N;
    cin >> N;
    int cnt = 0;
    cin >> arr[0];
    dp.push_back(arr[0]);
    for(int i = 1; i < N; i++){
        cin >> arr[i];
        if( dp[cnt] < arr[i]){
            dp.push_back(arr[i]);
            track[i] = ++cnt;
        }
        else{
            int idx = lower_bound(dp.begin(),dp.end(), arr[i]) - dp.begin();
            dp[idx] = arr[i];
            track[i] = idx;
        }
    }
    for(int i = N - 1; i >= 0 && cnt >= 0; i--){
        if(track[i] == cnt){
            ans.push_back(arr[i]);
            cnt--;
        }
    }
    cout << ans.size() << endl;
    for(int i = ans.size() - 1; i >= 0; i--)
        cout << ans[i] << " ";
}
