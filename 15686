#include <string>
#include <iostream>
#include <cmath>
#include <queue>
using namespace std;
#define MAX 987654321
#define endl "\n"
int Map[51][51];
bool check[51][51];
int i, j, N, M;
int xmin = MAX;
vector<pair<int, int>> chk, hm;

int distance (int x, int y, int xx, int yy){
    return abs(x - xx) + abs(y - yy);
}

int findsum(){
    int ans = 0;
   for(int i = 0; i < hm.size(); i++){
       int mindis = MAX;
       for(int j = 0; j < chk.size(); j++){
           if(check[chk[j].first][chk[j].second])
               mindis = min(mindis, distance(hm[i].first, hm[i].second, chk[j].first, chk[j].second));
       }
       ans += mindis;
   }
   return ans;
}
void Solve(int Size, int idx){
    int dis = findsum();
    if(Size == M){
        xmin = min(xmin, dis);
        return;
    }
    for(int i = idx; i < chk.size(); i++){
        pair<int, int> temp;
        temp = chk[i];
        check[temp.first][temp.second] = false;
        Solve(Size - 1, i + 1);
        check[temp.first][temp.second] = true;
    }
}

int main(){
    cin >> N >> M;
    for(i = 0; i < N; i++){
        for(j = 0; j < N; j++){
            cin >> Map[i][j];
            if(Map[i][j] == 1){
                hm.push_back({i, j});
            }
            else if(Map[i][j] == 2){
                chk.push_back({i, j});
                check[i][j] = true;
            }
        }
    }
    Solve(chk.size(), 0);

    cout << xmin << endl;
    return 0;
}
